{"ast":null,"code":"var _jsxFileName = \"/Users/admin/currency-exchange/src/ConvertDate.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConvertDate extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      d: \"\",\n      day: \"\",\n      date: \"\",\n      month: \"\",\n      year: \"\"\n    };\n\n    this.getDate = () => {\n      var d = new Date();\n      let day = d.toLocaleString(\"en-US\", {\n        weekday: 'long'\n      });\n      let month = d.toLocaleString(\"en-US\", {\n        month: \"long\"\n      });\n      let date = d.toLocaleString(\"en-US\", {\n        day: '2-digit'\n      });\n      let year = d.toLocaleString(\"en-US\", {\n        day: '2-digit'\n      });\n      this.setState({\n        d,\n        day,\n        month,\n        date\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getDate();\n  }\n\n  render() {\n    const {\n      d,\n      day,\n      month,\n      date\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [day, \", \", month, \" \", date]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default ConvertDate;","map":{"version":3,"sources":["/Users/admin/currency-exchange/src/ConvertDate.js"],"names":["React","ConvertDate","Component","state","d","day","date","month","year","getDate","Date","toLocaleString","weekday","setState","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,CAAC,EAAE,EADG;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,IAAI,EAAE;AALA,KADgC;;AAAA,SAaxCC,OAbwC,GAa9B,MAAM;AACd,UAAIL,CAAC,GAAG,IAAIM,IAAJ,EAAR;AACA,UAAIL,GAAG,GAAGD,CAAC,CAACO,cAAF,CAAiB,OAAjB,EAA0B;AAAEC,QAAAA,OAAO,EAAG;AAAZ,OAA1B,CAAV;AACA,UAAIL,KAAK,GAAGH,CAAC,CAACO,cAAF,CAAiB,OAAjB,EAA0B;AAAEJ,QAAAA,KAAK,EAAE;AAAT,OAA1B,CAAZ;AAEA,UAAID,IAAI,GAAGF,CAAC,CAACO,cAAF,CAAiB,OAAjB,EAA0B;AAAEN,QAAAA,GAAG,EAAG;AAAR,OAA1B,CAAX;AACA,UAAIG,IAAI,GAAGJ,CAAC,CAACO,cAAF,CAAiB,OAAjB,EAA0B;AAAEN,QAAAA,GAAG,EAAG;AAAR,OAA1B,CAAX;AACA,WAAKQ,QAAL,CAAc;AAAET,QAAAA,CAAF;AAAKC,QAAAA,GAAL;AAAUE,QAAAA,KAAV;AAAiBD,QAAAA;AAAjB,OAAd;AACD,KArBuC;AAAA;;AASxCQ,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,OAAL;AACD;;AAYDM,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,CAAF;AAAKC,MAAAA,GAAL;AAAUE,MAAAA,KAAV;AAAiBD,MAAAA;AAAjB,QAA0B,KAAKH,KAArC;AAEA,wBAAO;AAAA,iBAAME,GAAN,QAAaE,KAAb,OAAqBD,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA3BuC;;AA+B1C,eAAeL,WAAf","sourcesContent":["import React from 'react';\n\nclass ConvertDate extends React.Component {\n  state = {\n    d: \"\",\n    day: \"\",\n    date: \"\",\n    month: \"\",\n    year: \"\",\n  };\n\n  componentDidMount() {\n    this.getDate();\n  }\n\n  getDate = () => {\n    var d = new Date();\n    let day = d.toLocaleString(\"en-US\", { weekday : 'long'});\n    let month = d.toLocaleString(\"en-US\", { month: \"long\" })\n    ;\n    let date = d.toLocaleString(\"en-US\", { day : '2-digit'});\n    let year = d.toLocaleString(\"en-US\", { day : '2-digit'});\n    this.setState({ d, day, month, date });\n  };\n\n  render() {\n    const { d, day, month, date } = this.state;\n\n    return <div>{day}, {month} {date}</div>;\n  }\n}\n\n\nexport default ConvertDate;\n"]},"metadata":{},"sourceType":"module"}