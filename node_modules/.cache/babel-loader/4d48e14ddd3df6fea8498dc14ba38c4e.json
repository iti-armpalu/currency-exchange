{"ast":null,"code":"var _jsxFileName = \"/Users/admin/currency-exchange/src/Rates.js\";\nimport React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport RatesTable from './RatesTable'; // A component state storing the base currency value and the currency rates, the default base currency value will be USD (just personal preference).\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Rates extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeBase = event => {\n      this.setState({\n        base: event.target.value\n      });\n      this.getRatesData(event.target.value);\n    };\n\n    this.getRatesData = base => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://alt-exchange-rate.herokuapp.com/latest?base=${base}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rates = Object.keys(data.rates).filter(acronym => acronym !== base).map(acronym => ({\n          acronym,\n          rate: data.rates[acronym],\n          name: currencies[acronym].name,\n          symbol: currencies[acronym].symbol\n        }));\n        this.setState({\n          rates,\n          loading: false\n        });\n      }).catch(error => console.error(error.message));\n    };\n\n    this.state = {\n      base: 'USD',\n      rates: null,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    this.getRatesData(this.state.base);\n  } // Notice that we don't have to bind the changeBase method to the object in constructor. This is possible because we are using the arrow function syntax for defining changeBase. Since arrow functions do not possess their own this object, it will use the first this object it finds as it searches for one in its higher scope.\n\n\n  // Map method is used to create an array of option elements from the key values of the currencies object.\n  render() {\n    const {\n      base,\n      rates,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-4 page-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-2\",\n          children: \"Currency Rates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convert-wrap p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row convert-inner justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"p-3 form-inline justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-2\",\n            children: [\"Base currency: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mr-2\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            class: \"form-select currency-input\",\n            \"aria-label\": \"Default select example\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              children: \"Open this select menu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"One\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"Two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"Three\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RatesTable, {\n          base: base,\n          rates: rates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Rates;","map":{"version":3,"sources":["/Users/admin/currency-exchange/src/Rates.js"],"names":["React","currencies","checkStatus","json","RatesTable","Rates","Component","constructor","props","changeBase","event","setState","base","target","value","getRatesData","loading","fetch","then","data","error","Error","rates","Object","keys","filter","acronym","map","rate","name","symbol","catch","console","message","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport RatesTable from './RatesTable';\n\n    // A component state storing the base currency value and the currency rates, the default base currency value will be USD (just personal preference).\n  class Rates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      base: 'USD',\n      rates: null,\n      loading: true,\n    }\n  }\n\n  componentDidMount() {\n    this.getRatesData(this.state.base);\n  }\n\n  // Notice that we don't have to bind the changeBase method to the object in constructor. This is possible because we are using the arrow function syntax for defining changeBase. Since arrow functions do not possess their own this object, it will use the first this object it finds as it searches for one in its higher scope.\n  changeBase = (event) => {\n    this.setState({ base: event.target.value });\n    this.getRatesData(event.target.value);\n  }\n\n  getRatesData = (base) => {\n    this.setState({ loading: true });\n    fetch(`https://alt-exchange-rate.herokuapp.com/latest?base=${base}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rates = Object.keys(data.rates)\n          .filter(acronym => acronym !== base)\n          .map(acronym => ({\n            acronym,\n            rate: data.rates[acronym],\n            name: currencies[acronym].name,\n            symbol: currencies[acronym].symbol,\n          }))\n\n        this.setState({ rates, loading: false });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  // Map method is used to create an array of option elements from the key values of the currencies object.\n\n  render () {\n    const { base, rates,loading } = this.state;\n\n    return (\n      <React.Fragment>\n        <div className=\"text-center p-4 page-heading\">\n          <h2 className=\"mb-2\">Currency Rates</h2>\n        </div>\n\n        <div className=\"convert-wrap p-5\">\n          <div className=\"row convert-inner justify-content-center\">\n            <div className=\"col-12\">\n            </div>\n                \n          </div>\n\n        \n          <form className=\"p-3 form-inline justify-content-center\">\n            <h3 className=\"mb-2\">Base currency: <span className=\"mr-2\">1</span></h3>\n            <select class=\"form-select currency-input\" aria-label=\"Default select example\">\n              <option selected>Open this select menu</option>\n              <option value=\"1\">One</option>\n              <option value=\"2\">Two</option>\n              <option value=\"3\">Three</option>\n            </select>\n          </form>\n          <RatesTable base={base} rates={rates} />\n          </div>\n          <h3>Hello</h3>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Rates;"]},"metadata":{},"sourceType":"module"}