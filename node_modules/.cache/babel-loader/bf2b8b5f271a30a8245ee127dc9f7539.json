{"ast":null,"code":"var _jsxFileName = \"/Users/admin/currency-exchange/src/Convert.js\";\n// Convert.js\nimport React from 'react';\nimport Chart from 'chart.js/auto';\nimport ConvertDate from './ConvertDate';\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ConvertOld extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getRate = (base, quote) => {\n      this.setState({\n        loading: true\n      });\n      fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}&to=${quote}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(3)),\n          loading: false\n        });\n      }).catch(error => console.error(error.message));\n    };\n\n    this.getHistoricalRates = (base, quote) => {\n      const endDate = new Date().toISOString().split('T')[0];\n      const startDate = new Date(new Date().getTime() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0];\n      fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${base}&to=${quote}`).then(checkStatus).then(json).then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[quote]);\n        const chartLabel = `${base}/${quote}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      }).catch(error => console.error(error.message));\n    };\n\n    this.buildChart = (labels, data, label) => {\n      const chartRef = this.chartRef.current.getContext(\"2d\");\n\n      if (typeof this.chart !== \"undefined\") {\n        this.chart.destroy();\n      }\n\n      this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n        type: 'line',\n        data: {\n          labels,\n          datasets: [{\n            label: label,\n            data,\n            fill: false,\n            tension: 0,\n            color: '#095142'\n          }]\n        },\n        options: {\n          responsive: true,\n          color: '#095142',\n          scales: {\n            x: {\n              grid: {\n                borderColor: '#095142'\n              },\n              ticks: {\n                color: '#095142'\n              }\n            },\n            y: {\n              grid: {\n                borderColor: '#095142'\n              },\n              ticks: {\n                color: '#095142'\n              }\n            }\n          },\n          elements: {\n            line: {\n              borderColor: '#095142',\n              borderWidth: '1'\n            }\n          },\n          plugins: {\n            legend: {\n              display: false\n            }\n          }\n        }\n      });\n    };\n\n    this.changeBaseAcronym = event => {\n      const baseAcronym = event.target.value;\n      this.setState({\n        baseAcronym\n      });\n      this.getRate(baseAcronym, this.state.quoteAcronym);\n      this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n    };\n\n    this.changeBaseValue = event => {\n      const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n      this.setState({\n        baseValue: event.target.value,\n        quoteValue\n      });\n    };\n\n    this.changeQuoteAcronym = event => {\n      const quoteAcronym = event.target.value;\n      this.setState({\n        quoteAcronym\n      });\n      this.getRate(this.state.baseAcronym, quoteAcronym);\n      this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n    };\n\n    this.changeQuoteValue = event => {\n      const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n      this.setState({\n        quoteValue: event.target.value,\n        baseValue\n      });\n    };\n\n    const params = new URLSearchParams(props.location.search);\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'GBP',\n      quoteValue: 0,\n      loading: false\n    };\n    this.chartRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      baseAcronym,\n      quoteAcronym\n    } = this.state;\n    this.getRate(baseAcronym, quoteAcronym);\n    this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    return equation(input, rate).toFixed(2);\n  }\n\n  render() {\n    const {\n      rate,\n      baseAcronym,\n      baseValue,\n      quoteAcronym,\n      quoteValue,\n      loading\n    } = this.state;\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: currencyAcronym,\n      children: currencyAcronym\n    }, currencyAcronym, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 76\n    }, this));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center p-4 page-heading\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-2\",\n          children: \"Currency Converter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"convert-wrap p-3 p-md-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row convert-inner justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-5 col-md convert-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"You Have\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"base\",\n                  className: \"form-control currency-input\",\n                  value: baseValue,\n                  onChange: this.changeBaseValue,\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-5 col-md  text-center convert-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"currency-name\",\n                  children: currencies[baseAcronym].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: currencies[baseAcronym].flag,\n                    className: \"currency-flag align-self-center\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: baseAcronym,\n                    onChange: this.changeBaseAcronym,\n                    className: \"form-control currency-input\",\n                    disabled: loading,\n                    children: currencyOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"align-self-center\",\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faChevronDown\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 210,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-1 text-center currency-arrow\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faArrowAltCircleRight,\n                    size: \"2x\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6 col-md  convert-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"You Get\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"quote\",\n                  className: \"form-control currency-input\",\n                  value: quoteValue,\n                  onChange: this.changeQuoteValue,\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-6 col-md  text-center convert-box\",\n                children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                  className: \"currency-name\",\n                  children: currencies[quoteAcronym].name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: currencies[quoteAcronym].flag,\n                    className: \"currency-flag align-self-center\",\n                    alt: \"\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                    value: quoteAcronym,\n                    onChange: this.changeQuoteAcronym,\n                    className: \"form-control currency-input\",\n                    disabled: loading,\n                    children: currencyOptions\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"align-self-center\",\n                    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faChevronDown\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 59\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \" currency-base-to-quote\",\n            children: [\"1 \", baseAcronym, \" = \", rate, \" \", quoteAcronym]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \" conversion-date\",\n            children: [\"Conversion date:\", /*#__PURE__*/_jsxDEV(ConvertDate, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5 mx-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-heading my-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"mb-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: baseAcronym\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 34\n            }, this), \" to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: quoteAcronym\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 64\n            }, this), \" Chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: currencies[baseAcronym].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 33\n            }, this), \" to \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: currencies[quoteAcronym].name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.chartRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ConvertOld;","map":{"version":3,"sources":["/Users/admin/currency-exchange/src/Convert.js"],"names":["React","Chart","ConvertDate","currencies","checkStatus","json","FontAwesomeIcon","faChevronDown","faArrowAltCircleRight","ConvertOld","Component","constructor","props","getRate","base","quote","setState","loading","fetch","then","data","error","Error","rate","rates","baseValue","quoteValue","Number","toFixed","catch","console","message","getHistoricalRates","endDate","Date","toISOString","split","startDate","getTime","chartLabels","Object","keys","chartData","values","map","chartLabel","buildChart","labels","label","chartRef","current","getContext","chart","destroy","type","datasets","fill","tension","color","options","responsive","scales","x","grid","borderColor","ticks","y","elements","line","borderWidth","plugins","legend","display","changeBaseAcronym","event","baseAcronym","target","value","state","quoteAcronym","changeBaseValue","convert","toQuote","changeQuoteAcronym","changeQuoteValue","toBase","params","URLSearchParams","location","search","get","createRef","componentDidMount","amount","equation","input","parseFloat","isNaN","render","currencyOptions","currencyAcronym","name","flag"],"mappings":"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","sourcesContent":["// Convert.js\nimport React from 'react';\nimport Chart from 'chart.js/auto';\nimport ConvertDate from './ConvertDate'\nimport currencies from './utils/currencies';\nimport { checkStatus, json } from './utils/fetchUtils';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown, faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons';\n\nclass ConvertOld extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const params = new URLSearchParams(props.location.search);\n\n    this.state = {\n      rate: 0,\n      baseAcronym: params.get('base') || 'USD',\n      baseValue: 0,\n      quoteAcronym: params.get('quote') || 'GBP',\n      quoteValue: 0,\n      loading: false,\n    };\n\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const { baseAcronym, quoteAcronym } = this.state;\n    this.getRate(baseAcronym, quoteAcronym);\n    this.getHistoricalRates(baseAcronym, quoteAcronym);\n  }\n\n  getRate = (base, quote) => {\n    this.setState({ loading: true });\n    fetch(`https://altexchangerateapi.herokuapp.com/latest?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const rate = data.rates[quote];\n\n        this.setState({\n          rate,\n          baseValue: 1,\n          quoteValue: Number((1 * rate).toFixed(3)),\n          loading: false,\n        });\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  getHistoricalRates = (base, quote) => {\n    const endDate = new Date().toISOString().split('T')[0];\n    const startDate = new Date((new Date).getTime() - (30 * 24 * 60 * 60 * 1000)).toISOString().split('T')[0];\n\n    fetch(`https://altexchangerateapi.herokuapp.com/${startDate}..${endDate}?from=${base}&to=${quote}`)\n      .then(checkStatus)\n      .then(json)\n      .then(data => {\n        if (data.error) {\n          throw new Error(data.error);\n        }\n\n        const chartLabels = Object.keys(data.rates);\n        const chartData = Object.values(data.rates).map(rate => rate[quote]);\n        const chartLabel = `${base}/${quote}`;\n        this.buildChart(chartLabels, chartData, chartLabel);\n      })\n      .catch(error => console.error(error.message));\n  }\n\n  buildChart = (labels, data, label) => {\n    const chartRef = this.chartRef.current.getContext(\"2d\");\n\n    if (typeof this.chart !== \"undefined\") {\n      this.chart.destroy();\n    }\n\n    this.chart = new Chart(this.chartRef.current.getContext(\"2d\"), {\n      type: 'line',\n      data: {\n        labels,\n        datasets: [\n          {\n            label: label,\n            data,\n            fill: false,\n            tension: 0,\n            color: '#095142',\n          }\n        ]\n      },\n\n      options: {\n        responsive: true,\n        color: '#095142',\n        scales: {\n          x: {\n            grid: {\n              borderColor: '#095142'\n            },\n            ticks: {\n              color: '#095142',\n            }\n          },\n          y: {\n            grid: {\n              borderColor: '#095142'\n            },\n            ticks: {\n              color: '#095142',\n            }\n          }\n        },\n        elements: {\n          line: {\n            borderColor: '#095142',\n            borderWidth: '1'\n          }\n        },\n        plugins: {\n          legend: {\n            display: false\n          }\n        }\n      }\n    })\n  }\n  \n\n  toBase(amount, rate) {\n    return amount * (1 / rate);\n  }\n\n  toQuote(amount, rate) {\n    return amount * rate;\n  }\n\n  convert(amount, rate, equation) {\n    const input = parseFloat(amount);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    return equation(input, rate).toFixed(2);\n  }\n\n  changeBaseAcronym = (event) => {\n    const baseAcronym = event.target.value;\n    this.setState({ baseAcronym });\n    this.getRate(baseAcronym, this.state.quoteAcronym);\n    this.getHistoricalRates(baseAcronym, this.state.quoteAcronym);\n  }\n\n  changeBaseValue = (event) => {\n    const quoteValue = this.convert(event.target.value, this.state.rate, this.toQuote);\n    this.setState({\n      baseValue: event.target.value,\n      quoteValue,\n    });\n  }\n\n  changeQuoteAcronym = (event) => {\n    const quoteAcronym = event.target.value;\n    this.setState({ quoteAcronym });\n    this.getRate(this.state.baseAcronym, quoteAcronym);\n    this.getHistoricalRates(this.state.baseAcronym, quoteAcronym);\n  }\n\n  changeQuoteValue = (event) => {\n    const baseValue = this.convert(event.target.value, this.state.rate, this.toBase);\n    this.setState({\n      quoteValue: event.target.value,\n      baseValue,\n    });\n  }\n\n  render() {\n    const { rate, baseAcronym, baseValue, quoteAcronym, quoteValue, loading } = this.state;\n\n    const currencyOptions = Object.keys(currencies).map(currencyAcronym => <option key={currencyAcronym} value={currencyAcronym}>{currencyAcronym}</option>);\n\n    return (\n      <React.Fragment>\n\n        <div className=\"text-center p-4 page-heading\">\n          <h2 className=\"mb-2\">Currency Converter</h2>\n        </div>\n\n          <div className=\"convert-wrap p-3 p-md-5\">\n            <div className=\"row convert-inner justify-content-center\">\n              <div className=\"col-12\">\n                <div className=\"row\">\n\n                  <div className=\"col-5 col-md convert-box\">\n                    <h6>You Have</h6>\n                    <input id=\"base\" className=\"form-control currency-input\" value={baseValue} onChange={this.changeBaseValue} type=\"number\" />\n                  </div>\n\n                  <div className=\"col-5 col-md  text-center convert-box\">\n                    <h6 className=\"currency-name\">{currencies[baseAcronym].name}</h6>\n                    <div className=\"d-flex\">\n                      <img src={currencies[baseAcronym].flag} className=\"currency-flag align-self-center\" alt=\"\"/>\n                      <select value={baseAcronym} onChange={this.changeBaseAcronym} className=\"form-control currency-input\" disabled={loading}>\n                        {currencyOptions}\n                      </select>\n                      <span className=\"align-self-center\"><FontAwesomeIcon icon={faChevronDown} /></span>\n                    </div>\n                  </div>\n\n                  <div className=\"col-1 text-center currency-arrow\">\n                    <span><FontAwesomeIcon icon={faArrowAltCircleRight} size=\"2x\"/></span>\n                  </div>\n\n                  <div className=\"col-6 col-md  convert-box\">\n                    <h6>You Get</h6>\n                    <input id=\"quote\" className=\"form-control currency-input\" value={quoteValue} onChange={this.changeQuoteValue} type=\"number\" />\n                  </div>\n\n                  <div className=\"col-6 col-md  text-center convert-box\">\n                    <h6 className=\"currency-name\">{currencies[quoteAcronym].name}</h6>\n                    <div className=\"d-flex\">  \n                      <img src={currencies[quoteAcronym].flag} className=\"currency-flag align-self-center\" alt=\"\"/>\n                      <select value={quoteAcronym} onChange={this.changeQuoteAcronym} className=\"form-control currency-input\" disabled={loading}>\n                        {currencyOptions}\n                      </select>\n                      <span className=\"align-self-center\"><FontAwesomeIcon icon={faChevronDown}/></span>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n\n            <div className=\"mt-5\">\n            <h6 className=\" currency-base-to-quote\">1 {baseAcronym} = {rate} {quoteAcronym}</h6>\n              <h6 className=\" conversion-date\">Conversion date:\n              <ConvertDate />\n              </h6>\n            </div>\n          </div>\n\n          <div className=\"my-5 mx-1\">\n          <div className=\"chart-heading my-3\">\n            <h6 className=\"mb-0\"><span>{baseAcronym}</span> to <span>{quoteAcronym}</span> Chart</h6>\n            <p className=\"mb-2\"><span>{currencies[baseAcronym].name}</span> to <span>{currencies[quoteAcronym].name}</span></p>\n          </div>\n            <canvas ref={this.chartRef} />\n\n          </div>\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ConvertOld;"]},"metadata":{},"sourceType":"module"}